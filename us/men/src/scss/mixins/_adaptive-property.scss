//Адаптивное свойство
$maxWidth: 1920;
$maxWidthContainer: 1024;

@mixin adaptive-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        //При уменьшении контейнера
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    } @else if $type==2 {
        //При увеличении контейнера
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    } @else {
        //Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

$maxWidth2: 1920;
$maxWidthContainer2: 500;

@mixin adaptive-value2($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        //При уменьшении контейнера
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer2 + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer2 - 320}));
        }
    } @else if $type==2 {
        //При увеличении контейнера
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer2 + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth2 - 320}));
        }
    } @else {
        //Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth2 - 320}));
    }
}
